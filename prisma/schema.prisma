generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Game {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String    @unique
  description String
  publisherId String    @db.ObjectId
  publisher   Publisher @relation(fields: [publisherId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  playerId    String[]  @db.ObjectId
  player      User[]    @relation(fields: [playerId], references: [id])
  reviews     Review[]
  active      Boolean   @default(false)
  genres      Genres
  history     String[]
}

model Publisher {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  email          String @unique
  name           String @unique
  publishedGames Game[]
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  name     String?
  reviews  Review[]
  gameId   String[] @db.ObjectId
  storage  Game[]   @relation(fields: [gameId], references: [id])
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Rating
  comment   String?
  gameId    String   @db.ObjectId
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updated   DateTime @updatedAt
}

enum Rating {
  GOOD
  BAD
}

enum Genres {
  ACTION
  MOBA
  HORROR
  SHOOTING
  OPEN_WORLD
  STORY_RICH
  STRATEGY
  MECHA
}

